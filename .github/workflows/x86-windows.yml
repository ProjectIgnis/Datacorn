name: x86-windows
on: push
jobs:
  x86-windows:
    runs-on: windows-2022
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - name: Download prebuilt qt 5.6
      shell: bash
      run: |
        mkdir C:/Qt
        cd C:/Qt
        curl --retry 5 --connect-timeout 30 --location --remote-header-name --output qt.7z https://github.com/xavery/qt563xp/releases/download/1.2/Qt-5.6.3-Static-XP.7z
        7z x qt.7z
        rm qt.7z
    - name: Install winxp components
      run: |
        Set-Location "C:\Program Files (x86)\Microsoft Visual Studio\Installer\"
        $InstallPath = "C:\Program Files\Microsoft Visual Studio\2022\Enterprise"
        $componentsToAdd= @(
          "Microsoft.VisualStudio.Component.VC.v141.x86.x64",
          "Microsoft.VisualStudio.Component.WinXP"
        )
        [string]$workloadArgs = $componentsToAdd | ForEach-Object {" --add " +  $_}
        $Arguments = ('/c', "vs_installer.exe", 'modify', '--installPath', "`"$InstallPath`"",$workloadArgs, '--quiet', '--norestart', '--nocache')
        # should be run twice
        $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden
    - name: Set x86 windows build tools as default
      uses: ilammy/msvc-dev-cmd@v1
      with:
          arch: win32
          toolset: 14.16
    - name: Make v141_xp toolset v141
      shell: bash
      run: |
        cd "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\MSBuild\Microsoft\VC\v150\Platforms\Win32\PlatformToolsets"
        rm -r v141 || true
        mv v141_xp v141
    - name: Qmake build
      shell: cmd
      run: |
        set PATH=C:\Qt\5.6.3-Static-XP\bin;%PATH%
        mkdir build && cd build
        qmake -o Makefile ../Datacorn.pro
        set CL=/MP
        nmake release
    - name: Setup directory with artifacts
      shell: bash
      run: |
        export RDIR=Datacorn
        mkdir $RDIR
        cp build/binary/Datacorn.exe $RDIR/
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: Datacorn
        path: Datacorn/
    - name: Release
      if: ${{ github.ref == 'refs/heads/master' }}
      uses: svenstaro/upload-release-action@v2
      with:
        overwrite: true
        asset_name: Datacorn.exe
        prerelease: true
        tag: |
          latest
        file: |
          Datacorn/Datacorn.exe
    - name: Log Failure
      uses: sarisia/actions-status-discord@v1
      if: failure()
      with:
        nodetail: true
        description: |
            [[${{ github.event.repository.name }}] ${{ github.job }} failed on ${{ github.ref }}](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})
        title: |

        color: 0xff0000
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        avatar_url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
        username: Github

  Notify-success:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    needs: [ x86-windows ]
    steps:
    - name: Log Success
      uses: sarisia/actions-status-discord@v1
      with:
        nodetail: true
        description: |
            [[${{ github.event.repository.name }}] Build Datacorn MSVC success on ${{ github.ref }}](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})
        title: |

        color: 0x0f9826
        webhook: ${{ secrets.DISCORD_WEBHOOK }}
        avatar_url: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
        username: Github
